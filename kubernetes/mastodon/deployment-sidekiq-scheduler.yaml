---
# Source: mastodon/templates/deployment-sidekiq.yaml
# Scheduler needs to be separate so it only ever has one instance running
# https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-sidekiq-sched
  labels:
    app.kubernetes.io/name: mastodon
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/version: "v4.3.0-rc.1"
    app.kubernetes.io/component: sidekiq-sched
    app.kubernetes.io/part-of: rails
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/instance: mastodon
      app.kubernetes.io/component: sidekiq-sched
      app.kubernetes.io/part-of: rails
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/instance: mastodon
        app.kubernetes.io/component: sidekiq-sched
        app.kubernetes.io/part-of: rails
    spec:
      serviceAccountName: mastodon
      securityContext:
        fsGroup: 991
        runAsGroup: 991
        runAsUser: 991
      containers:
        - name: mastodon
          securityContext:
            {}
          image: "ghcr.io/mastodon/mastodon:v4.3.0-rc.1"
          imagePullPolicy: IfNotPresent
          command:
            - bundle
            - exec
            - sidekiq
            - -c
            - "25"
            - -q
            - "scheduler"
          envFrom:
          - configMapRef:
              name: mastodon-env-secret
          - configMapRef:
              name: mastodon-env-tf
          resources:
            {}
